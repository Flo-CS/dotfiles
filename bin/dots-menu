#!/usr/bin/env bash

dmenu() {
	local prompt=$1

	pkill -x wofi
	wofi --dmenu --prompt "$prompt" --insensitive
}

terminal() {
	alacritty --class Dots.Menu -e $@
}

terminal_big() {
	alacritty --class Dots.BigMenu -e $@
}

waiting_terminal() {
	alacritty --class Dots.Menu -e bash -i -c "dots-show-logo; eval \"$@\"; dots-show-done;"
}

show_select_theme_menu() {
	selected=$(dots-theme-list | dmenu "Select theme")

	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		dots-theme-set "$selected"
	fi
}

show_select_wallpaper_menu() {
	selected=$(dots-wallpaper-list | dmenu "Select wallpaper")

	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		dots-wallpaper-set "$selected"
	fi
}

show_refresh_menu() {
	selected=$(fd '^dots-refresh-' "$DOTS_DIR/bin" -x basename {} | sed 's/^dots-refresh-//' | dmenu "Refresh menu")

	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		cmd=${selected// /-}
		dots-refresh-$cmd
	fi
}

show_applications_menu() {
	if wofi --show drun; then
		exit 0
	else
		show_main_menu
	fi
}

show_deploy_menu() {
	selected=$(printf '  Binaries
  Configs' | dmenu "Deploy menu")
	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		case "$selected" in
		*"Binaries"*) waiting_terminal dots-deploy-bin ;;
		*"Configs"*) waiting_terminal dots-deploy-config ;;
		esac
	fi
}

show_system_menu() {
	selected=$(printf '  Reboot
⏻  Shutdown
  Lock' | dmenu "System menu")

	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		case "$selected" in
		*"Reboot"*) systemctl reboot ;;
		*"Shutdown"*) systemctl poweroff ;;
		*"Lock"*) dots-system-lock ;;
		esac
	fi
}

show_screenshot_menu() {
	selected=$(printf '󰍹  Fullscreen
󰍺  Area
󰍻  Window' | dmenu "Screenshot menu")

	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		case "$selected" in
		*"Fullscreen"*) dots-cmd-screenshot output ;;
		*"Area"*) dots-cmd-screenshot region ;;
		*"Window"*) dots-cmd-screenshot window ;;
		esac
	fi
}

show_power_profile_menu() {
	selected=$(printf '󰂄  Power Saver
󰂅  Balanced
󰂆  Performance' | dmenu "Power profile menu")

	if [[ -z "$selected" ]]; then
		show_main_menu
	else
		case "$selected" in
		*"Power Saver"*) powerprofilesctl set power-saver ;;
		*"Balanced"*) powerprofilesctl set balanced ;;
		*"Performance"*) powerprofilesctl set performance ;;
		esac
		if [[ $? -eq 0 ]]; then
			notify-send "Power profile set to $(powerprofilesctl get)" -u low
		else
			notify-send "Failed to set power profile" -u critical
		fi
	fi
}

show_main_menu() {
	selected=$(printf '  Theme
󱍷  Refresh
󰸉  Wallpaper
󰚰  Update
󰆨  Deploy
󰇄  System
  Bluetooth
󰀂  Network
  Audio
󰹑  Screenshot
󰣆  Applications
󰟌  Monitor
󰩲  Power profile' | dmenu "Dots menu")

	case "$selected" in
	*"Theme"*) show_select_theme_menu ;;
	*"Refresh"*) show_refresh_menu ;;
	*"Wallpaper"*) show_select_wallpaper_menu ;;
	*"Update"*) waiting_terminal dots-update ;;
	*"Deploy"*) show_deploy_menu ;;
	*"System"*) show_system_menu ;;
	*"Screenshot"*) show_screenshot_menu ;;
	*"Bluetooth"*) terminal bluetuith --no-warning ;;
	*"Network"*) terminal nmtui ;;
	*"Audio"*) terminal wiremix ;;
	*"Applications"*) show_applications_menu ;;
	*"Monitor"*) terminal_big btop ;;
	*"Power profile"*) show_power_profile_menu ;;
	esac
}

show_main_menu
